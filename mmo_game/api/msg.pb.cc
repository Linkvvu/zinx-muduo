// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg.proto
// Protobuf C++ Version: 4.26.0-dev

#include "msg.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace mmo {
namespace pb {

inline constexpr SyncPid::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pid_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SyncPid::SyncPid(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct SyncPidDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SyncPidDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SyncPidDefaultTypeInternal() {}
  union {
    SyncPid _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SyncPidDefaultTypeInternal _SyncPid_default_instance_;

inline constexpr Position::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : x_{0},
        y_{0},
        z_{0},
        v_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Position::Position(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;

inline constexpr BroadCast::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pid_{0},
        tp_{0},
        Data_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BroadCast::BroadCast(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BroadCastDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BroadCastDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BroadCastDefaultTypeInternal() {}
  union {
    BroadCast _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BroadCastDefaultTypeInternal _BroadCast_default_instance_;
}  // namespace pb
}  // namespace mmo
static ::_pb::Metadata file_level_metadata_msg_2eproto[3];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_msg_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_msg_2eproto = nullptr;
const ::uint32_t
    TableStruct_msg_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mmo::pb::SyncPid, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mmo::pb::SyncPid, _impl_.pid_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mmo::pb::Position, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mmo::pb::Position, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::mmo::pb::Position, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::mmo::pb::Position, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::mmo::pb::Position, _impl_.v_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::mmo::pb::BroadCast, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::mmo::pb::BroadCast, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::mmo::pb::BroadCast, _impl_.pid_),
        PROTOBUF_FIELD_OFFSET(::mmo::pb::BroadCast, _impl_.tp_),
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::mmo::pb::BroadCast, _impl_.Data_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::mmo::pb::SyncPid)},
        {9, -1, -1, sizeof(::mmo::pb::Position)},
        {21, -1, -1, sizeof(::mmo::pb::BroadCast)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::mmo::pb::_SyncPid_default_instance_._instance,
    &::mmo::pb::_Position_default_instance_._instance,
    &::mmo::pb::_BroadCast_default_instance_._instance,
};
const char descriptor_table_protodef_msg_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\tmsg.proto\022\006mmo.pb\"\026\n\007SyncPid\022\013\n\003Pid\030\001 "
    "\001(\005\"6\n\010Position\022\t\n\001X\030\001 \001(\002\022\t\n\001Y\030\002 \001(\002\022\t\n"
    "\001Z\030\003 \001(\002\022\t\n\001V\030\004 \001(\002\"t\n\tBroadCast\022\013\n\003Pid\030"
    "\001 \001(\005\022\n\n\002Tp\030\002 \001(\005\022\021\n\007Content\030\003 \001(\tH\000\022\035\n\001"
    "P\030\004 \001(\0132\020.mmo.pb.PositionH\000\022\024\n\nActionDat"
    "a\030\005 \001(\005H\000B\006\n\004DataB\005\252\002\002Pbb\006proto3"
};
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::_pbi::DescriptorTable
    descriptor_table_msg_2eproto = {
        false,
        232,
        descriptor_table_protodef_msg_2eproto,
        "msg.proto",
        nullptr,
        0,
        3,
        schemas,
        file_default_instances,
        TableStruct_msg_2eproto::offsets,
        file_level_metadata_msg_2eproto,
        file_level_enum_descriptors_msg_2eproto,
        file_level_service_descriptors_msg_2eproto,
};

PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_msg_2eproto_getter() {
  return &descriptor_table_msg_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_msg_2eproto(&descriptor_table_msg_2eproto);
namespace mmo {
namespace pb {
// ===================================================================

class SyncPid::_Internal {
 public:
};

SyncPid::SyncPid(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mmo.pb.SyncPid)
}
SyncPid::SyncPid(
    ::google::protobuf::Arena* arena, const SyncPid& from)
    : SyncPid(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE SyncPid::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void SyncPid::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.pid_ = {};
}
SyncPid::~SyncPid() {
  // @@protoc_insertion_point(destructor:mmo.pb.SyncPid)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SyncPid::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
SyncPid::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::ClassData
      _data_ = {
          SyncPid::MergeImpl,
           nullptr,  // OnDemandRegisterArenaDtor
           &::google::protobuf::Message::kDescriptorMethods,
              PROTOBUF_FIELD_OFFSET(SyncPid, _impl_._cached_size_),
      };
  return &_data_;
}
PROTOBUF_NOINLINE void SyncPid::Clear() {
// @@protoc_insertion_point(message_clear_start:mmo.pb.SyncPid)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pid_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SyncPid::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SyncPid::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SyncPid_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mmo::pb::SyncPid>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 Pid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SyncPid, _impl_.pid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SyncPid, _impl_.pid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 Pid = 1;
    {PROTOBUF_FIELD_OFFSET(SyncPid, _impl_.pid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SyncPid::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mmo.pb.SyncPid)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 Pid = 1;
  if (this->_internal_pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_pid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mmo.pb.SyncPid)
  return target;
}

::size_t SyncPid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mmo.pb.SyncPid)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Pid = 1;
  if (this->_internal_pid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_pid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void SyncPid::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SyncPid*>(&to_msg);
  auto& from = static_cast<const SyncPid&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mmo.pb.SyncPid)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_pid() != 0) {
    _this->_internal_set_pid(from._internal_pid());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SyncPid::CopyFrom(const SyncPid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mmo.pb.SyncPid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SyncPid::IsInitialized() const {
  return true;
}

void SyncPid::InternalSwap(SyncPid* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.pid_, other->_impl_.pid_);
}

::google::protobuf::Metadata SyncPid::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_2eproto_getter, &descriptor_table_msg_2eproto.once,
      file_level_metadata_msg_2eproto[0]);
}
// ===================================================================

class Position::_Internal {
 public:
};

Position::Position(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mmo.pb.Position)
}
Position::Position(
    ::google::protobuf::Arena* arena, const Position& from)
    : Position(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Position::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Position::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, v_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::v_));
}
Position::~Position() {
  // @@protoc_insertion_point(destructor:mmo.pb.Position)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Position::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
Position::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::ClassData
      _data_ = {
          Position::MergeImpl,
           nullptr,  // OnDemandRegisterArenaDtor
           &::google::protobuf::Message::kDescriptorMethods,
              PROTOBUF_FIELD_OFFSET(Position, _impl_._cached_size_),
      };
  return &_data_;
}
PROTOBUF_NOINLINE void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:mmo.pb.Position)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.v_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.v_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Position::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Position::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Position_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mmo::pb::Position>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float V = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.v_)}},
    // float X = 1;
    {::_pbi::TcParser::FastF32S1,
     {13, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.x_)}},
    // float Y = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.y_)}},
    // float Z = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.z_)}},
  }}, {{
    65535, 65535
  }}, {{
    // float X = 1;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float Y = 2;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float Z = 3;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float V = 4;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.v_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Position::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mmo.pb.Position)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // float X = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        1, this->_internal_x(), target);
  }

  // float Y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_y(), target);
  }

  // float Z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_z(), target);
  }

  // float V = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_v = this->_internal_v();
  ::uint32_t raw_v;
  memcpy(&raw_v, &tmp_v, sizeof(tmp_v));
  if (raw_v != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_v(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mmo.pb.Position)
  return target;
}

::size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mmo.pb.Position)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float X = 1;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 5;
  }

  // float Y = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 5;
  }

  // float Z = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 5;
  }

  // float V = 4;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_v = this->_internal_v();
  ::uint32_t raw_v;
  memcpy(&raw_v, &tmp_v, sizeof(tmp_v));
  if (raw_v != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void Position::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mmo.pb.Position)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  ::uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  ::uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  ::uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_v = from._internal_v();
  ::uint32_t raw_v;
  memcpy(&raw_v, &tmp_v, sizeof(tmp_v));
  if (raw_v != 0) {
    _this->_internal_set_v(from._internal_v());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mmo.pb.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Position::IsInitialized() const {
  return true;
}

void Position::InternalSwap(Position* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.v_)
      + sizeof(Position::_impl_.v_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata Position::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_2eproto_getter, &descriptor_table_msg_2eproto.once,
      file_level_metadata_msg_2eproto[1]);
}
// ===================================================================

class BroadCast::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::mmo::pb::BroadCast, _impl_._oneof_case_);
};

void BroadCast::set_allocated_p(::mmo::pb::Position* p) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_Data();
  if (p) {
    ::google::protobuf::Arena* submessage_arena = p->GetArena();
    if (message_arena != submessage_arena) {
      p = ::google::protobuf::internal::GetOwnedMessage(message_arena, p, submessage_arena);
    }
    set_has_p();
    _impl_.Data_.p_ = p;
  }
  // @@protoc_insertion_point(field_set_allocated:mmo.pb.BroadCast.P)
}
BroadCast::BroadCast(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:mmo.pb.BroadCast)
}
inline PROTOBUF_NDEBUG_INLINE BroadCast::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : Data_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BroadCast::BroadCast(
    ::google::protobuf::Arena* arena,
    const BroadCast& from)
    : ::google::protobuf::Message(arena) {
  BroadCast* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, pid_),
           offsetof(Impl_, tp_) -
               offsetof(Impl_, pid_) +
               sizeof(Impl_::tp_));
  switch (Data_case()) {
    case DATA_NOT_SET:
      break;
      case kContent:
        new (&_impl_.Data_.content_) decltype(_impl_.Data_.content_){arena, from._impl_.Data_.content_};
        break;
      case kP:
        _impl_.Data_.p_ = ::google::protobuf::Message::CopyConstruct<::mmo::pb::Position>(arena, *from._impl_.Data_.p_);
        break;
      case kActionData:
        _impl_.Data_.actiondata_ = from._impl_.Data_.actiondata_;
        break;
  }

  // @@protoc_insertion_point(copy_constructor:mmo.pb.BroadCast)
}
inline PROTOBUF_NDEBUG_INLINE BroadCast::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : Data_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BroadCast::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pid_),
           0,
           offsetof(Impl_, tp_) -
               offsetof(Impl_, pid_) +
               sizeof(Impl_::tp_));
}
BroadCast::~BroadCast() {
  // @@protoc_insertion_point(destructor:mmo.pb.BroadCast)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void BroadCast::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_Data()) {
    clear_Data();
  }
  _impl_.~Impl_();
}

void BroadCast::clear_Data() {
// @@protoc_insertion_point(one_of_clear_start:mmo.pb.BroadCast)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (Data_case()) {
    case kContent: {
      _impl_.Data_.content_.Destroy();
      break;
    }
    case kP: {
      if (GetArena() == nullptr) {
        delete _impl_.Data_.p_;
      }
      break;
    }
    case kActionData: {
      // No need to clear
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = DATA_NOT_SET;
}


const ::google::protobuf::MessageLite::ClassData*
BroadCast::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::ClassData
      _data_ = {
          BroadCast::MergeImpl,
           nullptr,  // OnDemandRegisterArenaDtor
           &::google::protobuf::Message::kDescriptorMethods,
              PROTOBUF_FIELD_OFFSET(BroadCast, _impl_._cached_size_),
      };
  return &_data_;
}
PROTOBUF_NOINLINE void BroadCast::Clear() {
// @@protoc_insertion_point(message_clear_start:mmo.pb.BroadCast)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.pid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.tp_) -
      reinterpret_cast<char*>(&_impl_.pid_)) + sizeof(_impl_.tp_));
  clear_Data();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* BroadCast::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 5, 1, 32, 2> BroadCast::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_BroadCast_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::mmo::pb::BroadCast>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 Tp = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BroadCast, _impl_.tp_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(BroadCast, _impl_.tp_)}},
    // int32 Pid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BroadCast, _impl_.pid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(BroadCast, _impl_.pid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 Pid = 1;
    {PROTOBUF_FIELD_OFFSET(BroadCast, _impl_.pid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 Tp = 2;
    {PROTOBUF_FIELD_OFFSET(BroadCast, _impl_.tp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string Content = 3;
    {PROTOBUF_FIELD_OFFSET(BroadCast, _impl_.Data_.content_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .mmo.pb.Position P = 4;
    {PROTOBUF_FIELD_OFFSET(BroadCast, _impl_.Data_.p_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 ActionData = 5;
    {PROTOBUF_FIELD_OFFSET(BroadCast, _impl_.Data_.actiondata_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::mmo::pb::Position>()},
  }}, {{
    "\20\0\0\7\0\0\0\0"
    "mmo.pb.BroadCast"
    "Content"
  }},
};

::uint8_t* BroadCast::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mmo.pb.BroadCast)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 Pid = 1;
  if (this->_internal_pid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_pid(), target);
  }

  // int32 Tp = 2;
  if (this->_internal_tp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_tp(), target);
  }

  switch (Data_case()) {
    case kContent: {
      const std::string& _s = this->_internal_content();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "mmo.pb.BroadCast.Content");
      target = stream->WriteStringMaybeAliased(3, _s, target);
      break;
    }
    case kP: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *_impl_.Data_.p_, _impl_.Data_.p_->GetCachedSize(), target, stream);
      break;
    }
    case kActionData: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt32ToArrayWithField<5>(
              stream, this->_internal_actiondata(), target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mmo.pb.BroadCast)
  return target;
}

::size_t BroadCast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mmo.pb.BroadCast)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 Pid = 1;
  if (this->_internal_pid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_pid());
  }

  // int32 Tp = 2;
  if (this->_internal_tp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tp());
  }

  switch (Data_case()) {
    // string Content = 3;
    case kContent: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_content());
      break;
    }
    // .mmo.pb.Position P = 4;
    case kP: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.Data_.p_);
      break;
    }
    // int32 ActionData = 5;
    case kActionData: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this->_internal_actiondata());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void BroadCast::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BroadCast*>(&to_msg);
  auto& from = static_cast<const BroadCast&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:mmo.pb.BroadCast)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_pid() != 0) {
    _this->_internal_set_pid(from._internal_pid());
  }
  if (from._internal_tp() != 0) {
    _this->_internal_set_tp(from._internal_tp());
  }
  switch (from.Data_case()) {
    case kContent: {
      _this->_internal_set_content(from._internal_content());
      break;
    }
    case kP: {
      _this->_internal_mutable_p()->::mmo::pb::Position::MergeFrom(
          from._internal_p());
      break;
    }
    case kActionData: {
      _this->_internal_set_actiondata(from._internal_actiondata());
      break;
    }
    case DATA_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BroadCast::CopyFrom(const BroadCast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mmo.pb.BroadCast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool BroadCast::IsInitialized() const {
  return true;
}

void BroadCast::InternalSwap(BroadCast* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BroadCast, _impl_.tp_)
      + sizeof(BroadCast::_impl_.tp_)
      - PROTOBUF_FIELD_OFFSET(BroadCast, _impl_.pid_)>(
          reinterpret_cast<char*>(&_impl_.pid_),
          reinterpret_cast<char*>(&other->_impl_.pid_));
  swap(_impl_.Data_, other->_impl_.Data_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BroadCast::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_msg_2eproto_getter, &descriptor_table_msg_2eproto.once,
      file_level_metadata_msg_2eproto[2]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace mmo
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
